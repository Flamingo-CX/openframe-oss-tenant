---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tactical-websockets
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tactical-websockets
  template:
    metadata:
      labels:
        app: tactical-websockets
    spec:
      imagePullSecrets:
        - name: github-pat-secret
      initContainers:
      - name: wait-for-dependencies
        image: busybox:1.28
        command: ['sh', '-c', '
          echo "Waiting for PostgreSQL..." &&
          until nc -z tactical-postgres.integrated-tools-datasources.svc.cluster.local 5432; do sleep 2; done &&
          echo "PostgreSQL is ready!" &&
          echo "Waiting for Redis..." &&
          until nc -z tactical-redis.integrated-tools-datasources.svc.cluster.local 6379; do sleep 2; done &&
          echo "Redis is ready!" &&
          echo "Waiting for Backend..." &&
          until nc -z tactical-backend.integrated-tools.svc.cluster.local 8000; do sleep 2; done &&
          echo "Backend is ready!"
          ']
      containers:
      - name: websockets
        image: ghcr.io/flamingo-cx/openframe-tactical-websockets:latest
        args: ["tactical-websockets"]
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: tactical-common-config
        volumeMounts:
        - name: websockets-data
          mountPath: /opt/tactical
        livenessProbe:
          exec:
            command:
            - cat
            - /opt/tactical/tmp/tactical/ready
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: websockets-data
        persistentVolumeClaim:
          claimName: tactical-websockets-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tactical-websockets-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: tactical-websockets
spec:
  selector:
    app: tactical-websockets
  ports:
  - port: 8383
    targetPort: 8383

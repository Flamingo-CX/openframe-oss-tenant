global:
  extraArgs:
    - --log.level=debug

loki:
  auth_enabled: false
  schemaConfig:
    configs:
      - from: 2024-04-01
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  ingester:
    chunk_encoding: snappy
  tracing:
    enabled: true
  querier:
    # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
    max_concurrent: 4

# loki:
#   auth_enabled: false
#   storage:
#     type: filesystem
#     filesystem:
#       chunks_directory: /var/loki/chunks
#       rules_directory: /var/loki/rules
#       admin_api_directory: /var/loki/admin

#   # Schema configuration for Loki
#   schemaConfig:
#     configs:
#       - from: 2020-10-24
#         store: tsdb
#         object_store: filesystem
#         schema: v13
#         index:
#           prefix: index_
#           period: 24h
  # Use test schema configuration for quick testing
  # useTestSchema: true

# Set deployment mode to SingleBinary since we're using a simple setup
# deploymentMode: SingleBinary

# # Explicitly set all components to 0 replicas except singleBinary
# write:
#   replicas: 0
# read:
#   replicas: 0
# backend:
#   replicas: 0

# singleBinary:
#   replicas: 1  # Increased from 1 to 2 for high availability
#   # autoscaling:
#   #   enabled: true
#   #   minReplicas: 1
#   #   maxReplicas: 3
#   #   targetCPUUtilizationPercentage: 60


deploymentMode: SimpleScalable
backend:
  replicas: 3
read:
  replicas: 3
write:
  replicas: 3
# Enable minio for storage
minio:
  enabled: true
# Zero out replica counts of other deployment modes
singleBinary:
  replicas: 0
ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0

  # grafana:
  #     - ./monitoring/grafana/provisioning:/etc/grafana/provisioning  # folders and panels remaning to setup


grafana:
  adminUser: openframe
  adminPassword: password123456789
  grafana.ini:
    auth.anonymous:
      enabled: true
      org_role: Viewer
      hide_version: true
      org_name: Main Org.
    auth.basic:
      enabled: true
    auth:
      disable_login_form: false
    security:
      allow_embedding: true
      cookie_samesite: disabled  # 'none' Prevents login
      allow_embedding_from_anywhere: true
    paths:
      provisioning: /etc/grafana/provisioning
    dashboards:
      default_home_dashboard_path: /tmp/dashboards/home-dashboard.json
  # env:
  #   GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /tmp/dashboards/home-dashboard.json
  #   GF_SECURITY_ALLOW_EMBEDDING: true
  #   # GF_SECURITY_COOKIE_SAMESITE: disabled  # 'none' Prevents login
  #   GF_SECURITY_ALLOW_EMBEDDING_FROM_ANYWHERE: true
  #   GF_AUTH_ANONYMOUS_ENABLED: true
  #   GF_AUTH_ANONYMOUS_ORG_ROLE: Viewer
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'Default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /tmp/dashboards
      - name: 'Library Panels'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /etc/grafana/library-panels

  ingress:
    enabled: true
    hosts: ["grafana.192.168.100.100.nip.io"]
  persistence:
    enabled: true
    type: sts
    accessModes:
      - ReadWriteOnce
    size: 1Gi
    finalizers:
      - kubernetes.io/pvc-protection
  # extraConfigmapMounts:
  #   - name: provisioning
  #     configMap: grafana-provisioning
  #     mountPath: /etc/grafana/provisioning
  #     readOnly: true
  #     items:
  #       - key: library-panels.yaml
  #         path: library-panels/provider.yaml
  additionalDataSources:
    # - name: prometheus
    #   access: proxy
    #   url: http://prometheus:9090
    #   isDefault: true
    #   editable: false
    #   uid: prometheus
    #   type: prometheus
    - name: loki
      type: loki
      access: proxy
      url: http://loki:3100
      isDefault: false
      editable: false
      uid: loki
      # jsonData:
      #   maxLines: 1000
      #   derivedFields:
      #     - datasourceUid: prometheus
      #       matcherRegex: "trace_id=(\\w+)"
      #       name: TraceID
      #       url: "$${__value.raw}"
      #   searchContext: "1h"
      #   serviceMap:
      #     datasourceUid: prometheus
      #   spanBar:
      #     tag: "duration"
      #   spanStartTimeShift: "1h"
      #   spanEndTimeShift: "1h"
      #   lokiQueryType: "Range"
      #   cacheLevel: "None"
      #   incrementalQueryOverlapWindow: "10m"
      #   queryTimeout: "30s"
      #   exemplarTraceIdDestinations:
      #     - name: trace_id
      #       datasourceUid: prometheus

  prune: true

alertmanager:
  ingress:
    enabled: true
    hosts: ["alertmanager.192.168.100.100.nip.io"]

prometheus:
  ingress:
    enabled: true
    hosts: ["prometheus.192.168.100.100.nip.io"]
  prometheusSpec:
    scrapeInterval: 15s
    evaluationInterval: 15s
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi
    additionalScrapeConfigs:
      - job_name: 'openframe-api'
        metrics_path: '/management/v1/prometheus'
        static_configs:
          - targets: ['openframe-api:8091']

      - job_name: 'openframe-stream'
        metrics_path: '/management/v1/prometheus'
        static_configs:
          - targets: ['openframe-stream:8083']

      - job_name: 'openframe-config'
        metrics_path: '/management/v1/prometheus'
        static_configs:
          - targets: ['openframe-config-server:8889']

      - job_name: 'openframe-management'
        metrics_path: '/management/v1/prometheus'
        static_configs:
          - targets: ['openframe-management:8096']

      - job_name: 'openframe-gateway'
        metrics_path: '/management/v1/prometheus'
        static_configs:
          - targets: ['openframe-gateway:8101']

      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'loki'
        static_configs:
          - targets: ['openframe-loki:3100']

      - job_name: 'redis'
        static_configs:
          - targets: ['openframe-redis-exporter:9121']

      - job_name: 'kafka'
        static_configs:
          - targets: ['openframe-kafka:9308']

      - job_name: 'zookeeper'
        static_configs:
          - targets: ['openframe-zookeeper:7070']
        relabel_configs:
          - source_labels: [__address__]
            target_label: service
            replacement: 'zookeeper'

      - job_name: 'mongodb'
        static_configs:
          - targets: ['openframe-mongodb-exporter:9216']

      - job_name: 'cassandra'
        static_configs:
          - targets: ['openframe-cassandra:9404']

      - job_name: 'nifi'
        static_configs:
          - targets: ['openframe-nifi:9096']

      - job_name: 'pinot'
        static_configs:
          - targets: ['openframe-pinot-controller:9011', 'openframe-pinot-broker:9012', 'openframe-pinot-server:9013']

    # ruleSelector:
    #   matchLabels:
    #     release: kube-prometheus-stack
    # ruleNamespaceSelector:
    #   matchLabels:
    #     release: kube-prometheus-stack

apiVersion: v1
kind: ConfigMap
metadata:
  name: pinot-jmx-config
data:
  config.yml: |
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    rules:
      # Pinot Controller metrics
      - pattern: "Pinot.Controller<type=ControllerMetrics><>([^:]+)"
        name: pinot_controller_$1
        type: GAUGE
        attrNameSnakeCase: true

      # Pinot Server metrics
      - pattern: "Pinot.Server<type=ServerMetrics><>([^:]+)"
        name: pinot_server_$1
        type: GAUGE
        attrNameSnakeCase: true

      # Query metrics
      - pattern: "Pinot<type=BrokerMetrics><>([^:]+)_([0-9]+)thPercentile"
        name: pinot_query_latency_percentile
        type: GAUGE
        labels:
          percentile: "$2"
        attrNameSnakeCase: true

      # Memory and GC metrics
      - pattern: "java.lang<type=Memory><HeapMemoryUsage>([^:]+)"
        name: jvm_memory_heap_$1
        type: GAUGE
        attrNameSnakeCase: true

      - pattern: "java.lang<type=GarbageCollector, name=([^,]+)><>CollectionCount"
        name: jvm_gc_collection_count
        type: COUNTER
        labels:
          gc: "$1"

    whitelistObjectNames:
      - "Pinot:*"
      - "java.lang:type=Memory"
      - "java.lang:type=GarbageCollector,*"
      - "java.lang:type=Threading"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pinot-controller-config
data:
  controller.conf: |
    controller.host=pinot-controller
    controller.port=9000
    controller.data.dir=/opt/pinot/data/controller
    controller.zk.str=zookeeper:2181
    controller.helix.cluster.name=openframe-pinot
    controller.broker.protocol=http
    controller.query.console.enabled=true
    controller.admin.access.control.enabled=false
    controller.helix.instance.id=Controller_pinot-controller_9000
    controller.enable.split.commit=true
    controller.local.temp.dir=/tmp/pinot-tmp-data/controller
    controller.task.scheduler.enabled=false
    pinot.set.instance.id.to.hostname=false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pinot-broker-config
data:
  broker.conf: |
    pinot.broker.client.queryPort=8099
    pinot.broker.timeoutMs=60000
    pinot.broker.routing.table.builder.class=random
    pinot.broker.routing.enable.dynamic.computing=true
    pinot.broker.enable.query.limit.override=false
    pinot.broker.healthcheck.enabled=true
    pinot.set.instance.id.to.hostname=false
    pinot.broker.helix.instance.id=Broker_pinot-broker_8099
    pinot.broker.metrics.registry.registration.listeners.class=org.apache.pinot.broker.metrics.BrokerMetricsRegistryRegistrationListener
    pinot.broker.helix.cluster.name=openframe-pinot
    pinot.broker.helix.zk.str=zookeeper:2181
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pinot-server-config
data:
  server.conf: |
    pinot.server.netty.port=8098
    pinot.server.instance.dataDir=/opt/pinot/data/server
    pinot.server.instance.segmentTarDir=/opt/pinot/data/server/segments
    pinot.server.starter.type=helix
    pinot.server.helix.instance.id=Server_pinot-server_8098
    pinot.server.helix.cluster.name=openframe-pinot
    pinot.server.adminapi.port=8097
    pinot.server.netty.host=0.0.0.0
    pinot.set.instance.id.to.hostname=false
    pinot.server.starter.enableSegmentBuildTimeLogging=false
    pinot.server.instance.enable.shutdown.delay=true
    pinot.server.helix.flappingTimeWindowMs=10000
    pinot.server.helix.enabled=true
    pinot.server.helix.zk.str=zookeeper:2181
---
# Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pinot-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pinot
      component: controller
  template:
    metadata:
      labels:
        app: pinot
        component: controller
    spec:
      initContainers:
      - name: init-jmx
        image: busybox
        command:
          - "sh"
          - "-c"
          - "wget -O /opt/jmx_exporter/jmx_prometheus_javaagent.jar https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/1.0.1/jmx_prometheus_javaagent-1.0.1.jar"
        volumeMounts:
        - name: jmx-exporter
          mountPath: /opt/jmx_exporter
      containers:
      - name: pinot-controller
        image: apachepinot/pinot:latest
        args:
          - "StartController"
          - "-configFileName"
          - "/opt/pinot/conf/controller.conf"
        ports:
        - containerPort: 9000
          name: controller
        - containerPort: 7070
          name: jmx
        env:
        - name: JAVA_OPTS
          value: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent.jar=7070:/opt/jmx_exporter/config.yml"
        volumeMounts:
        - name: jmx-exporter
          mountPath: /opt/jmx_exporter
        - name: jmx-config
          mountPath: /opt/jmx_exporter/config.yml
          subPath: config.yml
        - name: pinot-config
          mountPath: /opt/pinot/conf/controller.conf
          subPath: controller.conf
        - name: controller-data
          mountPath: /opt/pinot/data
      volumes:
      - name: jmx-exporter
        emptyDir: {}
      - name: jmx-config
        configMap:
          name: pinot-jmx-config
      - name: pinot-config
        configMap:
          name: pinot-controller-config
      - name: controller-data
        emptyDir: {}
---
# Broker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pinot-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pinot
      component: broker
  template:
    metadata:
      labels:
        app: pinot
        component: broker
    spec:
      initContainers:
      - name: init-jmx
        image: busybox
        command:
          - "sh"
          - "-c"
          - "wget -O /opt/jmx_exporter/jmx_prometheus_javaagent.jar https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/1.0.1/jmx_prometheus_javaagent-1.0.1.jar"
        volumeMounts:
        - name: jmx-exporter
          mountPath: /opt/jmx_exporter
      containers:
      - name: pinot-broker
        image: apachepinot/pinot:latest
        args:
          - "StartBroker"
          - "-configFileName"
          - "/opt/pinot/conf/broker.conf"
        ports:
        - containerPort: 8099
          name: broker
        - containerPort: 7071
          name: jmx
        env:
        - name: JAVA_OPTS
          value: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent.jar=7071:/opt/jmx_exporter/config.yml"
        volumeMounts:
        - name: jmx-exporter
          mountPath: /opt/jmx_exporter
        - name: jmx-config
          mountPath: /opt/jmx_exporter/config.yml
          subPath: config.yml
        - name: pinot-config
          mountPath: /opt/pinot/conf/broker.conf
          subPath: broker.conf
      volumes:
      - name: jmx-exporter
        emptyDir: {}
      - name: jmx-config
        configMap:
          name: pinot-jmx-config
      - name: pinot-config
        configMap:
          name: pinot-broker-config
---
# Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pinot-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pinot
      component: server
  template:
    metadata:
      labels:
        app: pinot
        component: server
    spec:
      initContainers:
      - name: init-jmx
        image: busybox
        command:
          - "sh"
          - "-c"
          - "wget -O /opt/jmx_exporter/jmx_prometheus_javaagent.jar https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/1.0.1/jmx_prometheus_javaagent-1.0.1.jar"
        volumeMounts:
        - name: jmx-exporter
          mountPath: /opt/jmx_exporter
      containers:
      - name: pinot-server
        image: apachepinot/pinot:latest
        args:
          - "StartServer"
          - "-configFileName"
          - "/opt/pinot/conf/server.conf"
        ports:
        - containerPort: 8098
          name: server
        - containerPort: 7072
          name: jmx
        env:
        - name: JAVA_OPTS
          value: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent.jar=7072:/opt/jmx_exporter/config.yml"
        volumeMounts:
        - name: jmx-exporter
          mountPath: /opt/jmx_exporter
        - name: jmx-config
          mountPath: /opt/jmx_exporter/config.yml
          subPath: config.yml
        - name: pinot-config
          mountPath: /opt/pinot/conf/server.conf
          subPath: server.conf
        - name: server-data
          mountPath: /opt/pinot/data
      volumes:
      - name: jmx-exporter
        emptyDir: {}
      - name: jmx-config
        configMap:
          name: pinot-jmx-config
      - name: pinot-config
        configMap:
          name: pinot-server-config
      - name: server-data
        emptyDir: {}
---
# Services
apiVersion: v1
kind: Service
metadata:
  name: pinot-controller
spec:
  selector:
    app: pinot
    component: controller
  ports:
    - port: 9000
      name: controller
    - port: 7070
      name: jmx
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: pinot-broker
spec:
  selector:
    app: pinot
    component: broker
  ports:
    - port: 8099
      name: broker
    - port: 7071
      name: jmx
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: pinot-server
spec:
  selector:
    app: pinot
    component: server
  ports:
    - port: 8098
      name: server
    - port: 7072
      name: jmx
  type: ClusterIP

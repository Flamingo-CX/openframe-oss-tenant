apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentik-postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authentik-postgresql
  template:
    metadata:
      labels:
        app: authentik-postgresql
    spec:
      imagePullSecrets:
        - name: github-pat-secret

      securityContext:
        fsGroup: 999

      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 999:999 /var/lib/postgresql/data && chmod 0700 -R /var/lib/postgresql/data"]
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data

      containers:
      - name: openframe-authentik-postgresql
        image: openframe-authentik-postgresql
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: authentik-user
        - name: POSTGRES_PASSWORD
          value: authentik-password-1234
        - name: POSTGRES_MULTIPLE_DATABASES
          value: authentik-database,authentik-database-authentik
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - authentik-user
            - -d
            - authentik-database-authentik
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - authentik-user
            - -d
            - authentik-database-authentik
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 512Mi
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: authentik-postgresql-data

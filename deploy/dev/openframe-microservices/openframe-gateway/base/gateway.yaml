apiVersion: apps/v1
kind: Deployment
metadata:
  name: openframe-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openframe-gateway
  template:
    metadata:
      labels:
        app: openframe-gateway
    spec:
      imagePullSecrets:
        - name: github-pat-secret
      initContainers:
        - name: wait-for-config-server
          image: curlimages/curl:latest
          command: ["sh", "-c", "until curl -f http://openframe-config-server:8888/xml/shared-logback-spring.xml; do sleep 1; done"]
      containers:
        - name: gateway
          image: ghcr.io/flamingo-cx/openframe-gateway:latest
          ports:
            - containerPort: 8100
              name: http
            - containerPort: 8101
              name: management
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "k8s"
            - name: SPRING_CONFIG_IMPORT
              value: "optional:configserver:http://openframe-config-server:8888"
          livenessProbe:
            httpGet:
              path: /management/v1/health
              port: management
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /management/v1/health
              port: management
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          resources:
            requests:
              memory: "512Mi"
              cpu: "0.5"
            limits:
              memory: "1Gi"
              cpu: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: openframe-gateway
  labels:
    app: openframe-gateway
spec:
  selector:
    app: openframe-gateway
  ports:
    - port: 8100
      targetPort: 8100
      name: http
    - port: 8101
      targetPort: 8101
      name: management
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: openframe-gateway
  annotations:
    cert-manager.io/cluster-issuer: "cluster-issuer"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - openframe-gateway.192.168.100.100.nip.io
    secretName: openframe-gateway-tls-secret
  rules:
    - host: openframe-gateway.192.168.100.100.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: openframe-gateway
                port:
                  name: http

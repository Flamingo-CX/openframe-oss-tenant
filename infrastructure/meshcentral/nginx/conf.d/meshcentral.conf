# Health check server
server {
    listen 8080;
    server_name localhost;

    location /nginx-health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy\n';
    }
}

server {
    listen 8383 ssl;
    server_name _ ${MESH_NGINX_NAT_HOST};

    # Use Kubernetes DNS service
    resolver kube-dns.kube-system.svc.cluster.local valid=5s;

    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

    set $meshcentral_upstream http://${MESH_HOST}:${MESH_PORT};
    set $meshcentral_openframe_public_upstream http://${MESH_HOST}:80;

    # Increase timeouts for WebSocket connections
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    location /openframe_public {
        proxy_pass $meshcentral_openframe_public_upstream;
        access_log /var/log/openframe.log;
        error_log /var/log/openframe-error.log;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        proxy_pass $meshcentral_upstream;
        proxy_http_version 1.1;

        # Enhanced WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        # Standard headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Add debug headers
        add_header X-Debug-Host $meshcentral_upstream;
        add_header X-Debug-Port $server_port;

        # Enable error logging
        error_log /var/log/nginx/meshcentral_error.log debug;
        access_log /var/log/nginx/meshcentral_access.log combined;
    }
}
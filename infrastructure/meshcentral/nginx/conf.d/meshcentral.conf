# Health check server
server {
    listen 8080;
    server_name localhost;

    # Add access and error logging for health check
    access_log /dev/stdout combined;
    error_log /dev/stderr debug;

    location /nginx-health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy\n';
    }
}

server {
    listen 8383 ssl;
    server_name _ ${MESH_NGINX_NAT_HOST};

    # Enable debug logging at server level
    access_log /dev/stdout combined buffer=512k flush=1m;
    error_log /dev/stderr debug;

    # Use Kubernetes DNS service
    resolver $RESOLVER valid=5s;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # WebSocket SSL settings
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;

    set $meshcentral_upstream http://${MESH_HOST}:${MESH_PORT};
    set $meshcentral_openframe_public_upstream http://${MESH_HOST}:80;

    # Increase timeouts for WebSocket connections
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 300s;  # Increased for long-running WebSocket connections

    # WebSocket common settings
    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location ~* ^/(openframe_public|api) {
        proxy_pass $meshcentral_openframe_public_upstream;
        # Specific logging for openframe_public
        access_log /dev/stdout combined;
        error_log /dev/stderr debug;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location / {
        proxy_pass $meshcentral_upstream;

        # Enhanced WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        # Add debug headers
        add_header X-Debug-Host $meshcentral_upstream;
        add_header X-Debug-Port $server_port;
        add_header X-Debug-Request-URI $request_uri;
        add_header X-Debug-Time $time_local;
        add_header X-Debug-Upgrade $http_upgrade;
        add_header X-Debug-Connection $http_connection;

        access_log /dev/stdout meshcentral_debug;
        error_log /dev/stderr debug;
    }
}
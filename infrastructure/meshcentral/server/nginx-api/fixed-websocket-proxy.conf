# Fixed WebSocket proxy configuration for MeshCentral

# Proxy WebSocket connections to MeshCentral
location /api/tunnel {
    # Check if auth parameter already exists in the query string
    if ($args ~ "auth=([^&]+)") {
        # If auth exists, don't add another one
        set $proxy_args $args;
    }
    else {
        # If no auth, add it from environment
        set $auth_value "";
        set $auth_value $auth_value;
        set $proxy_args "${args}&auth=${auth_value}";
    }

    # Convert /api/tunnel to /meshrelay.ashx
    rewrite ^/api/tunnel(.*) /meshrelay.ashx$1 break;
    
    # Standard WebSocket proxy settings
    proxy_pass ${MESH_PROTOCOL}://${MESH_NGINX_HOST}:${MESH_EXTERNAL_PORT}$uri?$proxy_args;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header Origin ${MESH_PROTOCOL}://${MESH_NGINX_HOST}:${MESH_EXTERNAL_PORT};
    proxy_read_timeout 86400;  # 24 hours
    proxy_send_timeout 86400;  # 24 hours
    
    # Pass through all headers and cookies
    proxy_pass_request_headers on;
}

# API endpoint to get WebSocket URL with auth
location /api/websocket {
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME ${MESH_DIR}/nginx-api/api/websocket.sh;
    fastcgi_param SCRIPT_NAME /api/websocket;
    fastcgi_param PATH_INFO $uri;
    fastcgi_param DOCUMENT_ROOT ${MESH_DIR}/nginx-api;
    
    # Pass environment variables
    fastcgi_param MESH_DIR ${MESH_DIR};
    fastcgi_param MESH_USER ${MESH_USER};
    fastcgi_param MESH_PASS ${MESH_PASS};
    fastcgi_param MESH_PROTOCOL ${MESH_PROTOCOL};
    fastcgi_param MESH_NGINX_HOST ${MESH_NGINX_HOST};
    fastcgi_param MESH_EXTERNAL_PORT ${MESH_EXTERNAL_PORT};
    
    fastcgi_pass unix:/var/run/fcgiwrap.socket;
}

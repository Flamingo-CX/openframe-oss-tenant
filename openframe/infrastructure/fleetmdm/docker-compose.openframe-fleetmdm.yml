name: openframe-fleetmdm

services:
  fleet-mysql:
    image: mysql:8.0.35
    container_name: openframe-fleet-mysql
    hostname: fleet-mysql
    platform: linux/amd64
    command:
      - --default-authentication-plugin=mysql_native_password
      - --skip-mysqlx
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: fleet
      MYSQL_DATABASE: fleet
      MYSQL_USER: fleet
      MYSQL_PASSWORD: fleet
      MYSQL_DEFAULT_AUTHENTICATION_PLUGIN: mysql_native_password
    volumes:
      - fleet-mysql:/var/lib/mysql
    networks:
      - openframe-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pfleet"]
      interval: 10s
      timeout: 5s
      retries: 5

  fleet-redis:
    image: redis:latest
    container_name: openframe-fleet-redis
    hostname: fleet-redis
    restart: always
    volumes:
      - fleet-redis:/data
    networks:
      - openframe-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  fleet:
    depends_on:
      fleet-mysql:
        condition: service_healthy
      fleet-redis:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    container_name: openframe-fleet
    hostname: fleet
    platform: linux/amd64
    restart: always
    user: root
    ports:
      - "8070:8070"
    environment:
      FLEET_CONFIG: /etc/fleet/fleet.yml
      FLEET_SETUP_ADMIN_EMAIL: "admin@openframe.local"
      FLEET_SETUP_ADMIN_PASSWORD: "openframe123!"
      FLEET_SETUP_ORG_NAME: "OpenFrame"
      FLEET_SETUP_AUTO_INIT: "true"
    volumes:
      - fleet-logs:/var/log/osquery
    networks:
      - openframe-network

volumes:
  fleet-mysql:
    name: fleet-mysql-data
  fleet-redis:
  fleet-logs:

networks:
  openframe-network:
    name: openframe-network
    driver: bridge
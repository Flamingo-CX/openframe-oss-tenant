# OpenFrame Authorization Server Configuration
spring:
  application:
    name: openframe-authorization-server
  
  profiles:
    active: local
    
  # MongoDB Configuration
  data:
    mongodb:
      uri: mongodb://openframe:password123456789@mongodb-0.mongodb.datasources.svc.cluster.local:27017/openframe?authSource=admin&connectTimeoutMS=10000&socketTimeoutMS=10000&serverSelectionTimeoutMS=10000

  # Spring Cloud Config
  cloud:
    config:
      enabled: false

# JWT Config is excluded via @ComponentScan excludeFilters in main application class

# Server Configuration
server:
  port: 9000
  forward-headers-strategy: native
  ssl:
    enabled: true
    # Use PEM certs generated by mkcert for local HTTPS
    certificate: classpath:tls/localhost.pem
    certificate-private-key: classpath:tls/localhost-key.pem

# CORS Configuration
cors:
  allowed-origins:
    - "http://localhost:*"
    - "https://localhost:*"
    - "http://localhost"
    - "https://localhost"
    - "http://localhost:3000"
    - "https://localhost:3000"
    - "http://localhost:5173"
    - "https://localhost:5173"
  allowed-methods: [ GET, POST, PUT, DELETE, OPTIONS ]
  allowed-headers: [ "*" ]
  allow-credentials: true
  max-age: 3600

# OpenFrame Configuration
openframe:
  auth:
    # Gateway OAuth2 Client Configuration
    gateway:
      client:
        id: openframe-gateway
        secret: openframe-gateway-secret
      redirect-uri: https://localhost/oauth/callback
  
  # Domain validation regex (only localhost for local development)
  domain:
    validation:
      regex: "^localhost$"

  # SSO Configuration
  sso:
    google:
      authorization-url: https://accounts.google.com/o/oauth2/v2/auth
      token-url: https://oauth2.googleapis.com/token
      user-info-url: https://www.googleapis.com/oauth2/v2/userinfo
      redirect-uri: https://localhost/oauth2/callback/google
      scopes: openid,profile,email
      enabled: true
      display-name: Google

# Security OAuth2 Token Configuration (for CookieService)
security:
  oauth2:
    token:
      access:
        expiration-seconds: 900
      refresh:
        expiration-seconds: 604800
  encryption:
    password: ${ENCRYPTION_PASSWORD:kdCJxik7VWRlG5L8jKHBeJQK5unssi7u1uHOd01b75ilr8n}
    salt: ${ENCRYPTION_SALT:74f62c51327175b05abe1ad78030565c}

# Logging Configuration
logging:
  level:
    com.openframe: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.security.oauth2.server.authorization.web.OAuth2TokenEndpointFilter: TRACE
    org.springframework.security.oauth2.server.authorization.authentication.OAuth2AuthorizationCodeAuthenticationProvider: TRACE
    org.springframework.security.oauth2.server.authorization: TRACE
{
  "tableName": "logs",
  "tableType": "REALTIME",
  "segmentsConfig": {
    "timeColumnName": "eventTimestamp",
    "timeType": "MILLISECONDS",
    "replication": "1",
    "segmentAssignmentStrategy": "BalanceNumSegmentAssignmentStrategy",
    "realtimeSegmentConfig": {
      "flushThresholdRows": "10000",
      "flushThresholdTime": "1h"
    }
  },
  "tableIndexConfig": {
    "loadMode": "MMAP",
    "nullHandlingEnabled": true,
    "optimizeDictionary": true,
    "noDictionaryColumns": [
      "summary",
      "userId",
      "deviceId"
    ],
    "invertedIndexColumns": [
      "ingestDay",
      "toolType", 
      "eventType",
      "severity"
    ],
    "textIndexColumns": [
      "summary",
      "userId",
      "deviceId"
    ],
    "rangeIndexColumns": [
      "eventTimestamp"
    ],
    "sortedColumn": ["eventTimestamp"],
    "streamConfigs": {
      "streamType": "kafka",
      "stream.kafka.topic.name": "integrated-tool.events.pinot",
      "stream.kafka.broker.list": "kafka-broker-headless.datasources.svc.cluster.local:9092",
      "stream.kafka.consumer.type": "lowlevel",
      "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.stream.kafka.KafkaJSONMessageDecoder",
      "stream.kafka.consumer.prop.auto.offset.reset": "smallest"
    }
  },
  "fieldConfigList": [
    {
      "name": "summary",
      "encodingType": "RAW",
      "indexTypes": ["TEXT"],
      "properties": {
        "enableQueryCache": "true",
        "caseSensitive": "false"
      }
    },
    {
      "name": "userId",
      "encodingType": "RAW",
      "indexTypes": ["TEXT"],
      "properties": {
        "enableQueryCache": "true",
        "caseSensitive": "false"
      }
    },
    {
      "name": "deviceId",
      "encodingType": "RAW",
      "indexTypes": ["TEXT"],
      "properties": {
        "enableQueryCache": "true",
        "caseSensitive": "false"
      }
    }
  ],
  "ingestionConfig": {},
  "routing": {
    "instanceSelectorType": "strictReplicaGroup"
  },
  "upsertConfig": {
    "mode": "FULL"
  },
  "tenants": {
    "broker": "DefaultTenant",
    "server": "DefaultTenant"
  }
} 
{"@timestamp":"2024-11-24T23:49:18.318209-05:00","thread_name":"main","logger_name":"com.openframe.api.ApiApplication","message":"Starting ApiApplication using Java 23.0.1 with PID 86741 (/Users/michaelassraf/Projects/openframe-backend/openframe/services/openframe-api/target/classes started by michaelassraf in /Users/michaelassraf/Projects/openframe-backend/openframe/services/openframe-api)"}
{"@timestamp":"2024-11-24T23:49:18.325215-05:00","thread_name":"main","logger_name":"com.openframe.api.ApiApplication","message":"Running with Spring Boot v3.2.0, Spring v6.1.1"}
{"@timestamp":"2024-11-24T23:49:18.32568-05:00","thread_name":"main","logger_name":"com.openframe.api.ApiApplication","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"@timestamp":"2024-11-24T23:49:18.542394-05:00","thread_name":"main","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"@timestamp":"2024-11-24T23:49:18.547143-05:00","thread_name":"main","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 2 ms. Found 0 MongoDB repository interfaces."}
{"@timestamp":"2024-11-24T23:49:18.900887-05:00","thread_name":"main","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8090 (http)"}
{"@timestamp":"2024-11-24T23:49:18.904537-05:00","thread_name":"main","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Initializing ProtocolHandler [\"http-nio-8090\"]"}
{"@timestamp":"2024-11-24T23:49:18.905727-05:00","thread_name":"main","logger_name":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2024-11-24T23:49:18.905962-05:00","thread_name":"main","logger_name":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.16]"}
{"@timestamp":"2024-11-24T23:49:18.929585-05:00","thread_name":"main","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2024-11-24T23:49:18.929862-05:00","thread_name":"main","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 572 ms"}
{"@timestamp":"2024-11-24T23:49:19.015805-05:00","thread_name":"main","logger_name":"org.mongodb.driver.client","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"4.11.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"aarch64\", \"version\": \"15.1.1\"}, \"platform\": \"Java/Homebrew/23.0.1\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='openframe', source='openframe', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@537ca28e, com.mongodb.Jep395RecordCodecProvider@5b322873, com.mongodb.KotlinCodecProvider@35e2b89f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[mongodb:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}"}
{"@timestamp":"2024-11-24T23:49:19.017788-05:00","thread_name":"cluster-ClusterId{value='674401ce457e370f7f1f72ee', description='null'}-mongodb:27017","logger_name":"org.mongodb.driver.cluster","message":"Exception in monitor thread while connecting to server mongodb:27017","stack_trace":"com.mongodb.MongoSocketException: mongodb: nodename nor servname provided, or not known\n\tat com.mongodb.ServerAddress.getSocketAddresses(ServerAddress.java:221)\n\tat com.mongodb.internal.connection.ServerAddressWithResolver.getSocketAddresses(ServerAddressWithResolver.java:68)\n\tat com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:100)\n\tat com.mongodb.internal.connection.SocketStream.open(SocketStream.java:78)\n\tat com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:211)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:196)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:156)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\nCaused by: java.net.UnknownHostException: mongodb: nodename nor servname provided, or not known\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)\n\tat java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1221)\n\tat java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1817)\n\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1149)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1807)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1676)\n\tat com.mongodb.ServerAddress.getSocketAddresses(ServerAddress.java:213)\n\t... 7 common frames omitted\n"}
{"@timestamp":"2024-11-24T23:49:19.09439-05:00","thread_name":"main","logger_name":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator","message":"Analyzing class class com.openframe.api.model.Event for index information"}
{"@timestamp":"2024-11-24T23:49:19.262158-05:00","thread_name":"main","logger_name":"com.netflix.graphql.dgs.webmvc.autoconfigure.GraphiQLConfigurer","message":"Configuring GraphiQL to use GraphQL endpoint at '/graphql'"}
{"@timestamp":"2024-11-24T23:49:19.56304-05:00","thread_name":"main","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Starting ProtocolHandler [\"http-nio-8090\"]"}
{"@timestamp":"2024-11-24T23:49:19.574025-05:00","thread_name":"main","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8090 (http) with context path ''"}
{"@timestamp":"2024-11-24T23:49:19.578205-05:00","thread_name":"main","logger_name":"com.openframe.api.ApiApplication","message":"Started ApiApplication in 1.597 seconds (process running for 1.804)"}
{"@timestamp":"2024-11-24T23:49:29.027046-05:00","thread_name":"cluster-ClusterId{value='674401ce457e370f7f1f72ee', description='null'}-mongodb:27017","logger_name":"org.mongodb.driver.cluster","message":"Exception in monitor thread while connecting to server mongodb:27017","stack_trace":"com.mongodb.MongoSocketException: mongodb\n\tat com.mongodb.ServerAddress.getSocketAddresses(ServerAddress.java:221)\n\tat com.mongodb.internal.connection.ServerAddressWithResolver.getSocketAddresses(ServerAddressWithResolver.java:68)\n\tat com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:100)\n\tat com.mongodb.internal.connection.SocketStream.open(SocketStream.java:78)\n\tat com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:211)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:196)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:156)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\nCaused by: java.net.UnknownHostException: mongodb\n\tat java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:998)\n\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1201)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1807)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1676)\n\tat com.mongodb.ServerAddress.getSocketAddresses(ServerAddress.java:213)\n\t... 7 common frames omitted\n"}
{"@timestamp":"2024-11-24T23:49:49.041564-05:00","thread_name":"cluster-ClusterId{value='674401ce457e370f7f1f72ee', description='null'}-mongodb:27017","logger_name":"org.mongodb.driver.cluster","message":"Exception in monitor thread while connecting to server mongodb:27017","stack_trace":"com.mongodb.MongoSocketException: mongodb: nodename nor servname provided, or not known\n\tat com.mongodb.ServerAddress.getSocketAddresses(ServerAddress.java:221)\n\tat com.mongodb.internal.connection.ServerAddressWithResolver.getSocketAddresses(ServerAddressWithResolver.java:68)\n\tat com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:100)\n\tat com.mongodb.internal.connection.SocketStream.open(SocketStream.java:78)\n\tat com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:211)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:196)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:156)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\nCaused by: java.net.UnknownHostException: mongodb: nodename nor servname provided, or not known\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)\n\tat java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1221)\n\tat java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1817)\n\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1149)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1807)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1676)\n\tat com.mongodb.ServerAddress.getSocketAddresses(ServerAddress.java:213)\n\t... 7 common frames omitted\n"}

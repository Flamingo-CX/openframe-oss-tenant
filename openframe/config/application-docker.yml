# Docker environment specific configuration
spring:
  data:
    # Docker MongoDB connection
    mongodb:
      uri: mongodb://openframe:password123456789@openframe-mongodb:27017/openframe?authSource=admin&connectTimeoutMS=10000&socketTimeoutMS=10000&serverSelectionTimeoutMS=10000
    # Docker Cassandra connection
    cassandra:
      contact-points: openframe-cassandra
      local-datacenter: datacenter1
      advanced:
        timestamp-generator:
          class: MonotonicTimestampGenerator
          force-java-clock: true
      request:
        timeout: 20s
      connection:
        connect-timeout: 20s
        init-query-timeout: 20s
      controlconnection:
        timeout: 20s
    # Docker Redis connection (only used by API)
    redis:
      host: openframe-redis
      port: 6379

# Docker logging configuration
logging:
  config: http://openframe-config-server:8888/logging/shared-logback-spring.xml
  level:
    root: INFO
    com.openframe: INFO
    org.springframework: INFO
    com.datastax.oss.driver: DEBUG
    com.datastax.driver: DEBUG
    org.springframework.data.cassandra: DEBUG
    com.datastax.oss.driver.internal.core.session: TRACE
    com.datastax.oss.driver.internal.core.pool: TRACE
    com.datastax.oss.driver.internal.core.config: DEBUG

# Docker monitoring endpoints
loki:
  url: http://openframe-loki:3100/loki/api/v1/push

# Pinot connection details
pinot:
  controller:
    url: http://openframe-pinot-controller:9000
  broker:
    url: http://openframe-pinot-broker:8099

name: Build Matrix
on:
  workflow_call:
    outputs:
      matrix:
        description: 'Matrix of modules to build'
        value: ${{ jobs.matrix.outputs.matrix }}

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: |
        [
          # Java Apps
          { "name": "core", "path": "libs/openframe-core", "type": "java", "artifact_name": "openframe-core" },
          { "name": "data", "path": "libs/openframe-data", "type": "java", "artifact_name": "openframe-data" },
          { "name": "api", "path": "services/openframe-api", "type": "java", "artifact_name": "openframe-api" },
          { "name": "config", "path": "services/openframe-config", "type": "java", "artifact_name": "openframe-config" },
          { "name": "gateway", "path": "services/openframe-gateway", "type": "java", "artifact_name": "openframe-gateway" },
          { "name": "management", "path": "services/openframe-management", "type": "java", "artifact_name": "openframe-management" },
          { "name": "stream", "path": "services/openframe-stream", "type": "java", "artifact_name": "openframe-stream" },
          # Non-Java Apps
          { "name": "mongodb", "path": "./infrastructure/mongodb", "type": "container", "artifact_name": "",
            "build_args": {
              "MONGO_INITDB_ROOT_USERNAME": "openframe",
              "MONGO_INITDB_ROOT_PASSWORD": "password123456789",
              "MONGO_APP_DATABASE": "openframe",
              "MONGO_APP_USERNAME": "openframe",
              "MONGO_APP_PASSWORD": "password123456789"
            }
          },
          { "name": "cassandra", "path": "./infrastructure/cassandra", "type": "container", "artifact_name": "",
            "build_args": {
              "CASSANDRA_CLUSTER_NAME": "openframe_cluster",
              "CASSANDRA_DC": "datacenter1",
              "CASSANDRA_START_RPC": "true",
              "CASSANDRA_NATIVE_TRANSPORT_MAX_THREADS": "128",
              "CASSANDRA_NATIVE_TRANSPORT_PORT_SSL": "9142",
              "CASSANDRA_NATIVE_TRANSPORT_MAX_FRAME_SIZE": "256MB",
              "CASSANDRA_STARTUP_TIMEOUT": "300",
              "CASSANDRA_SYSTEM_AUTH_BOOTSTRAP_DELAY": "0",
              "GOSSIP_WAIT_TIME_IN_MS": "0",
              "HEAP_NEWSIZE": "128M",
              "MAX_HEAP_SIZE": "512M",
              "LOCAL_JMX": "no",
              "JMX_PORT": "7199"
            }
          },
          { "name": "nifi", "path": "./infrastructure/nifi", "type": "container",
            "build_args": {
              "NIFI_WEB_HTTPS_PORT": "8443",
              "NIFI_WEB_HTTP_HOST": "0.0.0.0",
              "SINGLE_USER_CREDENTIALS_USERNAME": "openframe",
              "SINGLE_USER_CREDENTIALS_PASSWORD": "password123456789"
            }
          },
          { "name": "postgresql", "path": "./infrastructure/postgresql", "type": "container" },
          { "name": "authentik-postgresql", "path": "./infrastructure/postgresql", "type": "container",
            "build_args": {
              "POSTGRES_USER": "authentik-user",
              "POSTGRES_PASSWORD": "authentik-password-1234",
              "POSTGRES_MULTIPLE_DATABASES": "authentik-database,authentik-database-authentik"
            }
          },
          { "name": "tactical-frontend", "path": "./infrastructure/tactical-rmm/tactical-frontend", "type": "container",
            "context": "./infrastructure/tactical-rmm",
            "build_args": {
              "POSTGRES_DB": "tacticalrmm",
              "POSTGRES_USER": "postgres",
              "POSTGRES_PASSWORD": "postgrespass",
              "POSTGRES_HOST": "tactical-postgres",
              "POSTGRES_PORT": "5432",
              "REDIS_HOST": "tactical-redis",
              "SMTP_HOST": "smtp.example.com",
              "SMTP_PORT": "587",
              "SMTP_FROM": "mesh@example.com",
              "SMTP_USER": "mesh@example.com",
              "SMTP_PASS": "mesh-smtp-pass",
              "SMTP_TLS": "false",
              "TRMM_USER": "tactical",
              "TRMM_PASS": "tactical",
              "TACTICAL_BACKEND_PORT": "8000",
              "TRMM_PROTO": "http",
              "TRMM_DISABLE_WEB_TERMINAL": "False",
              "TRMM_DISABLE_SERVER_SCRIPTS": "False",
              "TRMM_DISABLE_SSO": "False",
              "TRMM_DISABLE_2FA": "True",
              "NODE_ENV": "development",
              "WS_PROTO": "ws",
              "WS_MASK_OVERRIDE": "1",
              "TACTICAL_DIR": "/opt/tactical",
              "TACTICAL_TMP_DIR": "/tmp/tactical",
              "API_HOST": "tactical-backend:8000",
              "API_LOCALHOST_HOST": "localhost:8000",
              "APP_HOST": "tactical-frontend:8080",
              "APP_LOCALHOST_HOST": "localhost:8080",
              "NATS_CONFIG": "/opt/tactical/nats-rmm.conf",
              "NATS_API_CONFIG": "/opt/tactical/nats-api.conf",
              "NATS_CONFIG_CHECK_INTERVAL": "5",
              "NATS_STD_BIND_HOST": "tactical-nats",
              "NATS_WS_BIND_HOST": "tactical-nats",
              "NATS_CONNECT_HOST": "tactical-nats",
              "NATS_STANDARD_PORT": "9235",
              "NATS_WEBSOCKET_PORT": "4222",
              "WEBSOCKET_PORT": "8383",
              "WEBSOCKETS_BIND_HOST": "tactical-websockets"
            }
          },
          { "name": "tactical-nginx", "path": "./infrastructure/tactical-rmm/tactical-nginx", "type": "container",
            "context": "./infrastructure/tactical-rmm",
            "build_args": {
              "POSTGRES_DB": "tacticalrmm",
              "POSTGRES_USER": "postgres",
              "POSTGRES_PASSWORD": "postgrespass",
              "POSTGRES_HOST": "tactical-postgres",
              "POSTGRES_PORT": "5432",
              "REDIS_HOST": "tactical-redis",
              "SMTP_HOST": "smtp.example.com",
              "SMTP_PORT": "587",
              "SMTP_FROM": "mesh@example.com",
              "SMTP_USER": "mesh@example.com",
              "SMTP_PASS": "mesh-smtp-pass",
              "SMTP_TLS": "false",
              "TRMM_USER": "tactical",
              "TRMM_PASS": "tactical",
              "TACTICAL_BACKEND_PORT": "8000",
              "TRMM_PROTO": "http",
              "TRMM_DISABLE_WEB_TERMINAL": "False",
              "TRMM_DISABLE_SERVER_SCRIPTS": "False",
              "TRMM_DISABLE_SSO": "False",
              "TRMM_DISABLE_2FA": "True",
              "NODE_ENV": "development",
              "WS_PROTO": "ws",
              "WS_MASK_OVERRIDE": "1",
              "TACTICAL_DIR": "/opt/tactical",
              "TACTICAL_TMP_DIR": "/tmp/tactical",
              "API_HOST": "tactical-backend:8000",
              "API_LOCALHOST_HOST": "localhost:8000",
              "APP_HOST": "tactical-frontend:8080",
              "APP_LOCALHOST_HOST": "localhost:8080",
              "NATS_CONFIG": "/opt/tactical/nats-rmm.conf",
              "NATS_API_CONFIG": "/opt/tactical/nats-api.conf",
              "NATS_CONFIG_CHECK_INTERVAL": "5",
              "NATS_STD_BIND_HOST": "tactical-nats",
              "NATS_WS_BIND_HOST": "tactical-nats",
              "NATS_CONNECT_HOST": "tactical-nats",
              "NATS_STANDARD_PORT": "9235",
              "NATS_WEBSOCKET_PORT": "4222",
              "WEBSOCKET_PORT": "8383",
              "WEBSOCKETS_BIND_HOST": "tactical-websockets"
            }
          },
          { "name": "tactical-backend", "path": "./infrastructure/tactical-rmm/tactical-base", "type": "container",
            "context": "./infrastructure/tactical-rmm",
            "build_args": {
              "POSTGRES_DB": "tacticalrmm",
              "POSTGRES_USER": "postgres",
              "POSTGRES_PASSWORD": "postgrespass",
              "POSTGRES_HOST": "tactical-postgres",
              "POSTGRES_PORT": "5432",
              "REDIS_HOST": "tactical-redis",
              "SMTP_HOST": "smtp.example.com",
              "SMTP_PORT": "587",
              "SMTP_FROM": "mesh@example.com",
              "SMTP_USER": "mesh@example.com",
              "SMTP_PASS": "mesh-smtp-pass",
              "SMTP_TLS": "false",
              "TRMM_USER": "tactical",
              "TRMM_PASS": "tactical",
              "TACTICAL_BACKEND_PORT": "8000",
              "TRMM_PROTO": "http",
              "TRMM_DISABLE_WEB_TERMINAL": "False",
              "TRMM_DISABLE_SERVER_SCRIPTS": "False",
              "TRMM_DISABLE_SSO": "False",
              "TRMM_DISABLE_2FA": "True",
              "NODE_ENV": "development",
              "WS_PROTO": "ws",
              "WS_MASK_OVERRIDE": "1",
              "TACTICAL_DIR": "/opt/tactical",
              "TACTICAL_TMP_DIR": "/tmp/tactical",
              "API_HOST": "tactical-backend:8000",
              "API_LOCALHOST_HOST": "localhost:8000",
              "APP_HOST": "tactical-frontend:8080",
              "APP_LOCALHOST_HOST": "localhost:8080",
              "NATS_CONFIG": "/opt/tactical/nats-rmm.conf",
              "NATS_API_CONFIG": "/opt/tactical/nats-api.conf",
              "NATS_CONFIG_CHECK_INTERVAL": "5",
              "NATS_STD_BIND_HOST": "tactical-nats",
              "NATS_WS_BIND_HOST": "tactical-nats",
              "NATS_CONNECT_HOST": "tactical-nats",
              "NATS_STANDARD_PORT": "9235",
              "NATS_WEBSOCKET_PORT": "4222",
              "WEBSOCKET_PORT": "8383",
              "WEBSOCKETS_BIND_HOST": "tactical-websockets"
            }
          },
          { "name": "tactical-nats", "path": "./infrastructure/tactical-rmm/tactical-base", "type": "container",
            "context": "./infrastructure/tactical-rmm",
            "build_args": {
              "POSTGRES_DB": "tacticalrmm",
              "POSTGRES_USER": "postgres",
              "POSTGRES_PASSWORD": "postgrespass",
              "POSTGRES_HOST": "tactical-postgres",
              "POSTGRES_PORT": "5432",
              "REDIS_HOST": "tactical-redis",
              "SMTP_HOST": "smtp.example.com",
              "SMTP_PORT": "587",
              "SMTP_FROM": "mesh@example.com",
              "SMTP_USER": "mesh@example.com",
              "SMTP_PASS": "mesh-smtp-pass",
              "SMTP_TLS": "false",
              "TRMM_USER": "tactical",
              "TRMM_PASS": "tactical",
              "TACTICAL_BACKEND_PORT": "8000",
              "TRMM_PROTO": "http",
              "TRMM_DISABLE_WEB_TERMINAL": "False",
              "TRMM_DISABLE_SERVER_SCRIPTS": "False",
              "TRMM_DISABLE_SSO": "False",
              "TRMM_DISABLE_2FA": "True",
              "NODE_ENV": "development",
              "WS_PROTO": "ws",
              "WS_MASK_OVERRIDE": "1",
              "TACTICAL_DIR": "/opt/tactical",
              "TACTICAL_TMP_DIR": "/tmp/tactical",
              "API_HOST": "tactical-backend:8000",
              "API_LOCALHOST_HOST": "localhost:8000",
              "APP_HOST": "tactical-frontend:8080",
              "APP_LOCALHOST_HOST": "localhost:8080",
              "NATS_CONFIG": "/opt/tactical/nats-rmm.conf",
              "NATS_API_CONFIG": "/opt/tactical/nats-api.conf",
              "NATS_CONFIG_CHECK_INTERVAL": "5",
              "NATS_STD_BIND_HOST": "tactical-nats",
              "NATS_WS_BIND_HOST": "tactical-nats",
              "NATS_CONNECT_HOST": "tactical-nats",
              "NATS_STANDARD_PORT": "9235",
              "NATS_WEBSOCKET_PORT": "4222",
              "WEBSOCKET_PORT": "8383",
              "WEBSOCKETS_BIND_HOST": "tactical-websockets"
            }
          },
          { "name": "tactical-websockets", "path": "./infrastructure/tactical-rmm/tactical-base", "type": "container",
            "context": "./infrastructure/tactical-rmm",
            "build_args": {
              "POSTGRES_DB": "tacticalrmm",
              "POSTGRES_USER": "postgres",
              "POSTGRES_PASSWORD": "postgrespass",
              "POSTGRES_HOST": "tactical-postgres",
              "POSTGRES_PORT": "5432",
              "REDIS_HOST": "tactical-redis",
              "SMTP_HOST": "smtp.example.com",
              "SMTP_PORT": "587",
              "SMTP_FROM": "mesh@example.com",
              "SMTP_USER": "mesh@example.com",
              "SMTP_PASS": "mesh-smtp-pass",
              "SMTP_TLS": "false",
              "TRMM_USER": "tactical",
              "TRMM_PASS": "tactical",
              "TACTICAL_BACKEND_PORT": "8000",
              "TRMM_PROTO": "http",
              "TRMM_DISABLE_WEB_TERMINAL": "False",
              "TRMM_DISABLE_SERVER_SCRIPTS": "False",
              "TRMM_DISABLE_SSO": "False",
              "TRMM_DISABLE_2FA": "True",
              "NODE_ENV": "development",
              "WS_PROTO": "ws",
              "WS_MASK_OVERRIDE": "1",
              "TACTICAL_DIR": "/opt/tactical",
              "TACTICAL_TMP_DIR": "/tmp/tactical",
              "API_HOST": "tactical-backend:8000",
              "API_LOCALHOST_HOST": "localhost:8000",
              "APP_HOST": "tactical-frontend:8080",
              "APP_LOCALHOST_HOST": "localhost:8080",
              "NATS_CONFIG": "/opt/tactical/nats-rmm.conf",
              "NATS_API_CONFIG": "/opt/tactical/nats-api.conf",
              "NATS_CONFIG_CHECK_INTERVAL": "5",
              "NATS_STD_BIND_HOST": "tactical-nats",
              "NATS_WS_BIND_HOST": "tactical-nats",
              "NATS_CONNECT_HOST": "tactical-nats",
              "NATS_STANDARD_PORT": "9235",
              "NATS_WEBSOCKET_PORT": "4222",
              "WEBSOCKET_PORT": "8383",
              "WEBSOCKETS_BIND_HOST": "tactical-websockets"
            }
          },
          { "name": "tactical-celery", "path": "./infrastructure/tactical-rmm/tactical-base", "type": "container",
            "context": "./infrastructure/tactical-rmm",
            "build_args": {
              "POSTGRES_DB": "tacticalrmm",
              "POSTGRES_USER": "postgres",
              "POSTGRES_PASSWORD": "postgrespass",
              "POSTGRES_HOST": "tactical-postgres",
              "POSTGRES_PORT": "5432",
              "REDIS_HOST": "tactical-redis",
              "SMTP_HOST": "smtp.example.com",
              "SMTP_PORT": "587",
              "SMTP_FROM": "mesh@example.com",
              "SMTP_USER": "mesh@example.com",
              "SMTP_PASS": "mesh-smtp-pass",
              "SMTP_TLS": "false",
              "TRMM_USER": "tactical",
              "TRMM_PASS": "tactical",
              "TACTICAL_BACKEND_PORT": "8000",
              "TRMM_PROTO": "http",
              "TRMM_DISABLE_WEB_TERMINAL": "False",
              "TRMM_DISABLE_SERVER_SCRIPTS": "False",
              "TRMM_DISABLE_SSO": "False",
              "TRMM_DISABLE_2FA": "True",
              "NODE_ENV": "development",
              "WS_PROTO": "ws",
              "WS_MASK_OVERRIDE": "1",
              "TACTICAL_DIR": "/opt/tactical",
              "TACTICAL_TMP_DIR": "/tmp/tactical",
              "API_HOST": "tactical-backend:8000",
              "API_LOCALHOST_HOST": "localhost:8000",
              "APP_HOST": "tactical-frontend:8080",
              "APP_LOCALHOST_HOST": "localhost:8080",
              "NATS_CONFIG": "/opt/tactical/nats-rmm.conf",
              "NATS_API_CONFIG": "/opt/tactical/nats-api.conf",
              "NATS_CONFIG_CHECK_INTERVAL": "5",
              "NATS_STD_BIND_HOST": "tactical-nats",
              "NATS_WS_BIND_HOST": "tactical-nats",
              "NATS_CONNECT_HOST": "tactical-nats",
              "NATS_STANDARD_PORT": "9235",
              "NATS_WEBSOCKET_PORT": "4222",
              "WEBSOCKET_PORT": "8383",
              "WEBSOCKETS_BIND_HOST": "tactical-websockets"
            }
          },
          { "name": "tactical-celerybeat", "path": "./infrastructure/tactical-rmm/tactical-base", "type": "container",
            "context": "./infrastructure/tactical-rmm",
            "build_args": {
              "POSTGRES_DB": "tacticalrmm",
              "POSTGRES_USER": "postgres",
              "POSTGRES_PASSWORD": "postgrespass",
              "POSTGRES_HOST": "tactical-postgres",
              "POSTGRES_PORT": "5432",
              "REDIS_HOST": "tactical-redis",
              "SMTP_HOST": "smtp.example.com",
              "SMTP_PORT": "587",
              "SMTP_FROM": "mesh@example.com",
              "SMTP_USER": "mesh@example.com",
              "SMTP_PASS": "mesh-smtp-pass",
              "SMTP_TLS": "false",
              "TRMM_USER": "tactical",
              "TRMM_PASS": "tactical",
              "TACTICAL_BACKEND_PORT": "8000",
              "TRMM_PROTO": "http",
              "TRMM_DISABLE_WEB_TERMINAL": "False",
              "TRMM_DISABLE_SERVER_SCRIPTS": "False",
              "TRMM_DISABLE_SSO": "False",
              "TRMM_DISABLE_2FA": "True",
              "NODE_ENV": "development",
              "WS_PROTO": "ws",
              "WS_MASK_OVERRIDE": "1",
              "TACTICAL_DIR": "/opt/tactical",
              "TACTICAL_TMP_DIR": "/tmp/tactical",
              "API_HOST": "tactical-backend:8000",
              "API_LOCALHOST_HOST": "localhost:8000",
              "APP_HOST": "tactical-frontend:8080",
              "APP_LOCALHOST_HOST": "localhost:8080",
              "NATS_CONFIG": "/opt/tactical/nats-rmm.conf",
              "NATS_API_CONFIG": "/opt/tactical/nats-api.conf",
              "NATS_CONFIG_CHECK_INTERVAL": "5",
              "NATS_STD_BIND_HOST": "tactical-nats",
              "NATS_WS_BIND_HOST": "tactical-nats",
              "NATS_CONNECT_HOST": "tactical-nats",
              "NATS_STANDARD_PORT": "9235",
              "NATS_WEBSOCKET_PORT": "4222",
              "WEBSOCKET_PORT": "8383",
              "WEBSOCKETS_BIND_HOST": "tactical-websockets"
            }
          },
          { "name": "fleetmdm", "path": "./infrastructure/fleetmdm", "type": "container" },
          { "name": "ui", "path": "./services/openframe-ui", "type": "container" },
          { "name": "meshcentral", "path": "./infrastructure/meshcentral/server", "type": "container",
            "build_args": {
              "MESH_DIR": "/opt/mesh",
              "MESH_TEMP_DIR": "/tmp/mesh",
              "MONGO_INITDB_ROOT_USERNAME": "mongouser",
              "MONGO_INITDB_ROOT_PASSWORD": "mongopass",
              "MONGO_INITDB_DATABASE": "meshcentral",
              "MONGODB_HOST": "openframe-meshcentral-mongodb",
              "MONGODB_PORT": "27017",
              "MESH_USER": "mesh@openframe.io",
              "MESH_PASS": "meshpass@1234",
              "MESH_DEVICE_GROUP": "OpenFrame",
              "MESH_PORT": "8383",
              "MESH_HOST": "openframe-meshcentral-server",
              "MESH_EXTERNAL_HOST": "localhost",
              "MESH_EXTERNAL_PORT": "8383",
              "MESH_NGINX_HOST": "openframe-meshcentral-nginx",
              "MESH_NGINX_NAT_HOST": "michaels-macbook-pro.local",
              "MESH_NGINX_PORT": "8383",
              "MESH_PROTOCOL": "wss",
              "MESH_PERSISTENT_CONFIG": "0",
              "MESH_DISABLE_SSL": "1",
              "MESH_COMPRESSION_ENABLED": "true",
              "MESH_WEBRTC_ENABLED": "false"
            }
          },
          { "name": "meshcentral-nginx", "path": "./infrastructure/meshcentral/nginx", "type": "container",
            "build_args": {
              "MESH_DIR": "/opt/mesh",
              "MESH_TEMP_DIR": "/tmp/mesh",
              "MONGO_INITDB_ROOT_USERNAME": "mongouser",
              "MONGO_INITDB_ROOT_PASSWORD": "mongopass",
              "MONGO_INITDB_DATABASE": "meshcentral",
              "MONGODB_HOST": "openframe-meshcentral-mongodb",
              "MONGODB_PORT": "27017",
              "MESH_USER": "mesh@openframe.io",
              "MESH_PASS": "meshpass@1234",
              "MESH_DEVICE_GROUP": "OpenFrame",
              "MESH_PORT": "8383",
              "MESH_HOST": "openframe-meshcentral-server",
              "MESH_EXTERNAL_HOST": "localhost",
              "MESH_EXTERNAL_PORT": "8383",
              "MESH_NGINX_HOST": "openframe-meshcentral-nginx",
              "MESH_NGINX_NAT_HOST": "michaels-macbook-pro.local",
              "MESH_NGINX_PORT": "8383",
              "MESH_PROTOCOL": "wss",
              "MESH_PERSISTENT_CONFIG": "0",
              "MESH_DISABLE_SSL": "1",
              "MESH_COMPRESSION_ENABLED": "true",
              "MESH_WEBRTC_ENABLED": "false"
            }
          }
        ]

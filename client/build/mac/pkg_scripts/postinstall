#!/bin/bash
# Improved postinstall script for OpenFrame with better debugging
# Avoid signal propagation that might terminate the installer
trap '' TERM INT

echo "OpenFrame: Starting postinstall script..."

# Create required directories and set permissions
echo "Creating required log directories..."
mkdir -p "/Library/Logs/OpenFrame"
mkdir -p "/Library/Application Support/OpenFrame"

# Clean up any existing compressed log files
echo "Cleaning up any existing compressed log files..."
rm -f "/Library/Logs/OpenFrame/daemon_error.log.gz" "/Library/Logs/OpenFrame/daemon_output.log.gz"

# Remove old run directory if it exists (no longer needed with LaunchDaemon)
if [ -d "/Applications/OpenFrame/run" ]; then
    echo "Removing deprecated run directory..."
    rm -rf "/Library/Application Support/OpenFrame/run"
fi

# Check for app bundle before setting permissions
if [ -d "/Applications/OpenFrame.app" ]; then
    # Set proper permissions for app bundle
    echo "Setting proper permissions for app bundle..."
    chmod -R 755 "/Applications/OpenFrame.app"
    chmod 755 "/Applications/OpenFrame.app/Contents/MacOS/openframe"
    # Set ownership to root
    chown -R root:wheel "/Applications/OpenFrame.app"
else
    echo "NOTE: OpenFrame.app not found in /Applications yet - this is normal for first installation"
fi

# Set proper permissions for support directories with detailed output
echo "Setting permissions on log directory..."
chmod -R 755 "/Library/Logs/OpenFrame"
ls -la "/Library/Logs/OpenFrame"

echo "Setting permissions on application support directory..."
chmod -R 755 "/Library/Application Support/OpenFrame"
ls -la "/Library/Application Support/OpenFrame"

# Create and initialize the main log file with proper permissions
echo "Creating and initializing main log file..."
echo "{\"timestamp\":\"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\",\"level\":\"INFO\",\"message\":\"Log file created by postinstall script\",\"source\":\"postinstall\"}" > "/Library/Logs/OpenFrame/openframe.log"
chmod 644 "/Library/Logs/OpenFrame/openframe.log"
chown root:wheel "/Library/Logs/OpenFrame/openframe.log"
ls -la "/Library/Logs/OpenFrame/openframe.log"

# Create and initialize the daemon log files with proper permissions
echo "Creating daemon log files..."
# Create log files with substantial initial content to prevent immediate compression
echo "# OpenFrame daemon stdout log file - Created $(date)" > "/Library/Logs/OpenFrame/daemon_output.log"
echo "# This file contains stdout from the OpenFrame daemon process" >> "/Library/Logs/OpenFrame/daemon_output.log"
echo "# Log entries will appear below this line" >> "/Library/Logs/OpenFrame/daemon_output.log"
echo "{\"timestamp\":\"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\",\"level\":\"INFO\",\"message\":\"Daemon output log file created\",\"source\":\"postinstall\"}" >> "/Library/Logs/OpenFrame/daemon_output.log"

echo "# OpenFrame daemon stderr log file - Created $(date)" > "/Library/Logs/OpenFrame/daemon_error.log"
echo "# This file contains stderr from the OpenFrame daemon process" >> "/Library/Logs/OpenFrame/daemon_error.log"
echo "# Error messages will appear below this line" >> "/Library/Logs/OpenFrame/daemon_error.log"
echo "{\"timestamp\":\"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\",\"level\":\"INFO\",\"message\":\"Daemon error log file created\",\"source\":\"postinstall\"}" >> "/Library/Logs/OpenFrame/daemon_error.log"

chmod 644 "/Library/Logs/OpenFrame/daemon_error.log"
chmod 644 "/Library/Logs/OpenFrame/daemon_output.log"
chown root:wheel "/Library/Logs/OpenFrame/daemon_error.log"
chown root:wheel "/Library/Logs/OpenFrame/daemon_output.log"

echo "Verifying daemon log files..."
ls -la "/Library/Logs/OpenFrame/daemon_error.log"
ls -la "/Library/Logs/OpenFrame/daemon_output.log"

# Set ownership on log and support directories
echo "Setting ownership on log and support directories..."
chown -R root:wheel "/Library/Logs/OpenFrame"
chown -R root:wheel "/Library/Application Support/OpenFrame"

# Add log rotation configuration to prevent OS compression
echo "Setting up log rotation..."
cat > "/Library/Logs/OpenFrame/newsyslog.conf" << EOF
# OpenFrame log rotation configuration
/Library/Logs/OpenFrame/daemon_output.log 644 3 1000 * Z
/Library/Logs/OpenFrame/daemon_error.log 644 3 1000 * Z
EOF

chmod 644 "/Library/Logs/OpenFrame/newsyslog.conf"
chown root:wheel "/Library/Logs/OpenFrame/newsyslog.conf"

# Verify write access to log directory
echo "Testing write access to log directory..."
if touch "/Library/Logs/OpenFrame/write_test" && rm "/Library/Logs/OpenFrame/write_test"; then
    echo "Log directory is writable"
else
    echo "WARNING: Could not write to log directory!"
fi

# =================== INSTALL SERVICE ===================
echo "OpenFrame: Installing service..."

# Run the install command - use nohup to ensure it doesn't affect the installer
if [ -f "/Applications/OpenFrame.app/Contents/MacOS/openframe" ]; then
    echo "Running 'openframe install' to register the service..."
    cd /
    # Use nohup, run in background, and redirect all output to prevent termination
    /Applications/OpenFrame.app/Contents/MacOS/openframe install > /dev/null 2>&1 &
else
    echo "ERROR: OpenFrame binary not found at expected location"
fi

echo "OpenFrame: Installation completed successfully"
# Ensure we exit cleanly
exit 0
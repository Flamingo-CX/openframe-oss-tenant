# MongoDB Replica Set Initialization Job for MeshCentral
# This Job initializes the replica set and creates the admin user.

apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-init-replicaset
spec:
  template:
    spec:
      containers:
      - name: mongo-init
        image: mongo:8.0.9
        command:
        - /bin/bash
        - -ec
        - |
          until mongo --host meshcentral-mongodb.integrated-tools.svc.cluster.local:27017 --eval "db.adminCommand('ping')" >/dev/null 2>&1; do
            echo "Waiting for MongoDB to be ready..."
            sleep 5
          done

          echo "Checking replica set status..."
          if ! mongo --host meshcentral-mongodb.integrated-tools.svc.cluster.local:27017 --eval "rs.status()" 2>/dev/null | grep -q '"ok" : 1'; then
            echo "Initializing replica set..."
            mongo --host meshcentral-mongodb.integrated-tools.svc.cluster.local:27017 --eval '
              rs.initiate({
                _id: "rs0",
                members: [
                  { _id: 0, host: "meshcentral-mongodb.integrated-tools.svc.cluster.local:27017" }
                ]
              })
            '
            echo "Waiting for replica set to stabilize..."
            sleep 30
          else
            echo "Replica set already initialized"
          fi

          echo "Checking admin user..."
          if ! mongo --host meshcentral-mongodb.integrated-tools.svc.cluster.local:27017 -u mongouser -p mongopass --authenticationDatabase admin --eval "db.adminCommand('ping')" >/dev/null 2>&1; then
            echo "Creating admin user..."
            mongo --host meshcentral-mongodb.integrated-tools.svc.cluster.local:27017 --eval '
              db.getSiblingDB("admin").createUser({
                user: "mongouser",
                pwd: "mongopass",
                roles: [
                  { role: "root", db: "admin" },
                  { role: "userAdminAnyDatabase", db: "admin" },
                  { role: "dbAdminAnyDatabase", db: "admin" },
                  { role: "readWriteAnyDatabase", db: "admin" }
                ]
              })
            '
          else
            echo "Admin user already exists"
          fi

          echo "Verifying replica set status..."
          mongo --host meshcentral-mongodb.integrated-tools.svc.cluster.local:27017 \
            -u mongouser -p mongopass --authenticationDatabase admin \
            --eval "rs.status()"
      restartPolicy: OnFailure
  backoffLimit: 4 

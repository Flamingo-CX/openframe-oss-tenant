apiVersion: batch/v1
kind: Job
metadata:
  name: tactical-postgres
  annotations:
    "argocd.argoproj.io/hook": PostSync
    "argocd.argoproj.io/hook-delete-policy": HookSucceeded
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: register
        image: curlimages/curl:8.5.0
        envFrom:
        - secretRef:
            name: tactical-postgres
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: tactical-postgres
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: tactical-postgres
              key: POSTGRES_PORT
        command:
        - /bin/sh
        - -c
        - |
          echo "Registering TacticalRMM PostgreSQL..."
          curl -X POST "http://openframe-management.microservices.svc.cluster.local:8095/v1/tools/tactical-postgres" \
            -H "Content-Type: application/json" \
            -d "{
              \"tool\": {
                \"id\": \"tactical-postgres\",
                \"toolType\": \"POSTGRESQL\",
                \"name\": \"TacticalRMM PostgreSQL\",
                \"description\": \"PostgreSQL Database Backend for TacticalRMM\",
                \"toolUrls\": [
                  {
                    \"url\": \"postgresql://${POSTGRES_HOST}\",
                    \"port\": \"${POSTGRES_PORT}\",
                    \"type\": \"DATABASE\"
                  }
                ],
                \"category\": \"SQL Database\",
                \"platformCategory\": \"Integrated Tool\",
                \"enabled\": true,
                \"credentials\": {
                  \"username\": \"${POSTGRES_USER}\",
                  \"password\": \"${POSTGRES_PASSWORD}\"
                },
                \"layer\": \"Integrated Tools\",
                \"layerOrder\": 6,
                \"layerColor\": \"#3949AB\",
                \"metricsPath\": \"/metrics\",
                \"healthCheckEndpoint\": \"/\",
                \"healthCheckInterval\": 30,
                \"connectionTimeout\": 5000,
                \"readTimeout\": 5000,
                \"allowedEndpoints\": [\"/metrics\"],
                \"debeziumConnector\": null
              }
            }" \
            --retry 5 \
            --retry-delay 2 \
            --retry-all-errors \
            --silent --show-error
          echo "TacticalRMM PostgreSQL Registration complete."

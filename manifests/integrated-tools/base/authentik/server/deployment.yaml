apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentik-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authentik-server
  template:
    metadata:
      labels:
        app: authentik-server
    spec:
      imagePullSecrets: 
        - name: github-pat-secret

      initContainers:
      - name: wait-for-postgres
        image: postgres:latest
        command: ['sh', '-c',
          'until pg_isready -h authentik-postgresql.integrated-tools -U authentik-user -d authentik-database-authentik; do echo waiting for postgres; sleep 2; done;']
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-postgres
              key: POSTGRES_PASSWORD

      containers:
      - name: server
        image: ghcr.io/goauthentik/server:latest
        args: ["server"]
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: authentik-server
        - secretRef:
            name: authentik-server
        - secretRef:
            name: authentik-postgres
        resources:
          requests:
            cpu: 150m
            memory: 1024Mi
          limits:
            cpu: 150m
            memory: 1024Mis
        startupProbe:
          httpGet:
            path: /-/health/live/
            port: http
          failureThreshold: 2000
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: /-/health/live/
            port: http
          failureThreshold: 2000
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /-/health/ready/
            port: http
            scheme: HTTP
          failureThreshold: 2000
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - name: media
          mountPath: /media
        - name: certs
          mountPath: /certs
        - name: templates
          mountPath: /templates
      volumes:
      - name: media
        emptyDir: {}
      - name: certs
        emptyDir: {}
      - name: templates
        emptyDir: {}
          
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentik-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authentik-worker
  template:
    metadata:
      labels:
        app: authentik-worker
    spec:
    
      initContainers:
      - name: wait-for-postgres
        image: postgres:latest
        command: ['sh', '-c',
          'until pg_isready -h authentik-postgresql.integrated-tools -U authentik-user -d authentik-database-authentik; do echo waiting for postgres; sleep 2; done;']
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-postgresql
              key: POSTGRES_PASSWORD

      - name: wait-for-server
        image: curlimages/curl:latest
        command: ['sh', '-c',
          'until curl -s http://authentik-server:9000/-/health/ready/; do echo waiting for authentik-server; sleep 2; done;']

      containers:
      - name: worker
        image: ghcr.io/goauthentik/server:latest
        args: ["worker"]
        envFrom:
        - configMapRef:
            name: authentik-server
        - secretRef:
            name: authentik-server
        - secretRef:
            name: authentik-postgresql
        resources:
          requests:
            cpu: 150m
            memory: 1024Mi
          limits:
            cpu: 150m
            memory: 1024Mi
        startupProbe:
          exec:
            command:
              - ak
              - healthcheck
          failureThreshold: 2000
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        livenessProbe:
          exec:
            command:
              - ak
              - healthcheck
          failureThreshold: 2000
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
              - ak
              - healthcheck
          failureThreshold: 2000
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        volumeMounts:
        - name: media
          mountPath: /media
        - name: certs
          mountPath: /certs
        - name: templates
          mountPath: /templates
      volumes:
      - name: media
        emptyDir: {}
      - name: certs
        emptyDir: {}
      - name: templates
        emptyDir: {}

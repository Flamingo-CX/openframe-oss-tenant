apiVersion: apps/v1
kind: Deployment
metadata:
  name: tactical-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tactical-backend
  template:
    metadata:
      labels:
        app: tactical-backend
    spec:
      imagePullSecrets:
        - name: github-pat-secret

      initContainers:
      - name: setup-fontconfig
        image: busybox:1.28
        command: ['sh', '-c', '
          mkdir -p /opt/tactical/.cache/fontconfig &&
          mkdir -p /opt/tactical/.local/share/fontconfig &&
          chown -R 1000:1000 /opt/tactical/.cache &&
          chown -R 1000:1000 /opt/tactical/.local
        ']
        volumeMounts:
        - name: backend-data
          mountPath: /opt/tactical

      - name: wait-for-dependencies
        image: busybox:1.28
        command: ['sh', '-c', '
          echo "Waiting for PostgreSQL..." &&
          until nc -z tactical-postgres.integrated-tools.svc.cluster.local 5432; do sleep 2; done &&
          echo "PostgreSQL is ready!" &&
          echo "Waiting for Redis..." &&
          until nc -z tactical-redis.integrated-tools.svc.cluster.local 6379; do sleep 2; done &&
          echo "Redis is ready!" &&
          echo "Waiting for Nginx..." &&
          until nc -z tactical-nginx.integrated-tools.svc.cluster.local 8080; do sleep 2; done &&
          echo "Nginx is ready!"
          ']

      containers:
      - name: tactical-backend
        image: "{{ .Values.tactical.backend.image.repo }}:{{ .Values.tactical.backend.image.tag }}"
        args: ["tactical-backend"]
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: tactical-default
        - configMapRef:
            name: tactical-postgres
        - configMapRef:
            name: tactical-redis
        - secretRef:
            name: tactical-postgres

        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: backend-data
          mountPath: /opt/tactical
      volumes:
      - name: backend-data
        persistentVolumeClaim:
          claimName: tactical-backend

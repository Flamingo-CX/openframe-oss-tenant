apiVersion: apps/v1
kind: Deployment
metadata:
  name: tactical-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tactical-nginx
  template:
    metadata:
      labels:
        app: tactical-nginx
    spec:
      {{- if or (ne .Values.registry.ghcr.password "") (ne .Values.registry.docker.password "") }}
      imagePullSecrets:
        {{- if ne .Values.registry.ghcr.password "" }}
        - name: github-pat-secret
        {{- end }}
        {{- if ne .Values.registry.docker.password "" }}
        - name: docker-pat-secret
        {{- end }}
      {{- end }}

      containers:
      - name: tactical-nginx
        image: "{{ .Values.tactical.nginx.image.repo }}:{{ .Values.tactical.nginx.image.tag }}"
        ports:
        - containerPort: 8080
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: tactical-nginx
        startupProbe:
          httpGet:
            path: /nginx_status
            port: 8081
          failureThreshold: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /nginx_status
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: nginx-data
          mountPath: /opt/tactical
      volumes:
      - name: nginx-data
        persistentVolumeClaim:
          claimName: tactical-nginx

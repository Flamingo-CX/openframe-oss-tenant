apiVersion: apps/v1
kind: Deployment
metadata:
  name: meshcentral-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: meshcentral-server
  template:
    metadata:
      labels:
        app: meshcentral-server
    spec:
      {{- if or (ne .Values.registry.ghcr.password "") (ne .Values.registry.docker.password "") }}
      imagePullSecrets:
        {{- if ne .Values.registry.ghcr.password "" }}
        - name: github-pat-secret
        {{- end }}
        {{- if ne .Values.registry.docker.password "" }}
        - name: docker-pat-secret
        {{- end }}
      {{- end }}
      securityContext:  # FIX for: chmod: /opt/mesh: Operation not permitted, remove this when chmod on /opt/mesh/ is removed
        runAsUser: 0
      
      initContainers:
      - name: wait-for-mongo
        image: curlimages/curl:latest
        command: ["sh", "-c", "until curl -f http://openframe-config:8888/xml/shared-logback-spring.xml; do sleep 1; done"]

      - name: init-clean-meshcentral
        image: busybox:1.36
        command:
          - sh
          - -c
          - |
            echo "[Init] Cleaning up MeshCentral working directory..."

            # Remove stale or corrupted install artifacts
            rm -rf /opt/mesh/node_modules/meshcentral
            rm -rf /opt/mesh/node_modules
            rm -f /opt/mesh/package-lock.json

            # Optional: set safe permissions for non-root containers
            echo "[Init] Setting ownership..."
            chown -R 1000:1000 /opt/mesh || echo "[Init] chown failed (non-blocking)"

            echo "[Init] Cleanup complete."
        volumeMounts:
          - name: meshcentral-data
            mountPath: /opt/mesh

      containers:
      - name: meshcentral
        image: "{{ .Values.server.image.repo }}:{{ .Values.server.image.tag }}"
        ports:
        - name: meshcentral
          containerPort: 8383
        - name: agent
          containerPort: 80
        envFrom:
          - configMapRef:
              name: meshcentral-server
          - configMapRef:
              name: meshcentral-mongodb
          - secretRef:
              name: meshcentral-server
          - secretRef:
              name: meshcentral-mongodb
        livenessProbe:
          httpGet:
            path: /health.ashx
            port: 8383
          initialDelaySeconds: 30
          periodSeconds: 15
        volumeMounts:
        - name: meshcentral-data
          mountPath: /opt/mesh
      volumes:
      - name: meshcentral-data
        persistentVolumeClaim:
          claimName: meshcentral-server

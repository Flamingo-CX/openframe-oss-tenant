apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: meshcentral-mongodb
spec:
  serviceName: meshcentral-mongodb
  replicas: 1
  selector:
    matchLabels:
      app: meshcentral-mongodb
  template:
    metadata:
      labels:
        app: meshcentral-mongodb
    spec:
      {{- if ne .Values.registry.docker.password "" }}
      imagePullSecrets:
        - name: docker-pat-secret
      {{- end }}
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999

      initContainers:
        - name: keyfile-prepare
          image: busybox:1.36
          securityContext:
            runAsUser: 0
          command:
            - /bin/sh
            - -c
            - |
              cp /secret/keyfile /work/keyfile
              chown 999:999 /work/keyfile
              chmod 400 /work/keyfile
          volumeMounts:
            - name: mongo-keyfile          # secret
              mountPath: /secret
            - name: mongo-keyfile-work     # emptyDir
              mountPath: /work

        - name: fix-perms
          image: busybox:1.36
          securityContext:
            runAsUser: 0
          command:
            - /bin/sh
            - -c
            - |
              chown -R 999:999 /data/db
              chmod -R u+rwX,g+rwX /data/db
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db

      containers:
        - name: mongodb
          image: mongo:8.0.9
          args: ["--bind_ip_all","--replSet","rs0","--keyFile","/etc/mongo-keyfile/keyfile","--auth"]
          ports:
            - name: mongodb
              containerPort: 27017
          envFrom:
            - secretRef:
                name: meshcentral-mongodb
            - configMapRef:
                name: meshcentral-mongodb
          readinessProbe:
            exec:
              command: ["/bin/bash", "/usr/local/bin/readiness-command.sh"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash","-lc","/usr/local/bin/mongo-init.sh > /var/log/mongo-init.log 2>&1 &"]
          livenessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
            - name: init-script
              mountPath: /usr/local/bin/mongo-init.sh
              subPath: mongo-init.sh
              readOnly: true
            - name: readiness-command
              mountPath: /usr/local/bin/readiness-command.sh
              subPath: readiness-command.sh
            - name: mongo-keyfile-work
              mountPath: /etc/mongo-keyfile
              readOnly: true

      volumes:
        - name: init-script
          configMap:
            name: meshcentral-mongodb-init
            defaultMode: 0755  
        - name: readiness-command
          configMap:
            name: meshcentral-mongodb-readiness
            defaultMode: 0755
        - name: mongo-keyfile
          secret:
            secretName: meshcentral-mongodb-keyfile
            defaultMode: 0400

        - name: mongo-keyfile-work
          emptyDir: {}

  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi

{{- range $name, $app := .Values.argocdApps }}
  {{- $skip := include "app.skip" (list $name $app $.Values) | trim | lower }}
  {{- if ne $skip "true" }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $name }}
  annotations:
    argocd.argoproj.io/sync-wave: "{{ $app.syncWave | default "0" }}"
  finalizers:
    - resources-finalizer.argocd.argoproj.io

spec:
  project: {{ $app.project | default "default" }}

  sources:
    {{- if hasKey $app "helm" }}
    # Helm chart
    - repoURL: {{ $app.helm.repoURL }}
      targetRevision: {{ $app.helm.version }}
      chart: {{ $app.helm.chart }}
      helm:
        valueFiles:
          - "$values/{{ $app.helm.valuesPath }}"
    - repoURL: {{ $.Values.repoURL }}
      targetRevision: {{ $.Values.repoBranch }}
      ref: values
    {{- end }}
    # Extra resources
    - repoURL: {{ $.Values.repoURL }}
      targetRevision: {{ $.Values.repoBranch }}
      path: "{{ if regexMatch `^namespace-` $name }}{{ printf "%s/%s/namespace" $.Values.repoDir $app.namespace }}{{ else }}{{ printf "%s/%s/%s" $.Values.repoDir $app.namespace $name }}{{ end }}"


  destination:
    name: in-cluster
    namespace: {{ $app.namespace }}

  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=false
      - ServerSideApply={{ (get $app "syncOptions" | default dict).ServerSideApply | default false }}
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 30m
  {{- end }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: openframe-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openframe-ui
  template:
    metadata:
      labels:
        app: openframe-ui
    spec:
      imagePullSecrets:
        - name: github-pat-secret

      containers:
        - name: openframe-ui
          image: "{{ .Values.image.repo }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: VITE_API_URL
              {{- if .Values.deployment.ingress.ngrok.enabled }}
              value: {{ printf "https://%s/api" (required "deployment.ingress.ngrok.url is required when ngrok ingress is enabled" .Values.deployment.ingress.ngrok.url) | quote }}
              {{- else }}
              value: "https://localhost/api"
              {{- end }}
            - name: VITE_CLIENT_URL
              {{- if .Values.deployment.ingress.ngrok.enabled }}
              value: {{ printf "https://%s/client" (required "deployment.ingress.ngrok.url is required when ngrok ingress is enabled" .Values.deployment.ingress.ngrok.url) | quote }}
              {{- else }}
              value: "https://localhost/client"
              {{- end }}
            - name: VITE_GATEWAY_URL
              {{- if .Values.deployment.ingress.ngrok.enabled }}
              value: {{ printf "https://%s" (required "deployment.ingress.ngrok.url is required when ngrok ingress is enabled" .Values.deployment.ingress.ngrok.url) | quote }}
              {{- else }}
              value: "https://localhost"
              {{- end }}
            - name: VITE_CLIENT_ID
              value: "openframe_web_dashboard"
            - name: VITE_CLIENT_SECRET
              value: "prod_secret"
            - name: VITE_GRAFANA_URL
              value: "https://localhost:3000"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          # resources:
          #   requests:
          #     memory: "256Mi"
          #     cpu: "0.2"
          #   limits:
          #     memory: "512Mi"
          #     cpu: "0.5"

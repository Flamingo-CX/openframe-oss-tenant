{{- if eq .Values.deployment.ingress "ngrok" }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: openframe-gateway
  # annotations:
  #   k8s.ngrok.com/traffic-policy: restrict-ips
spec:
  ingressClassName: ngrok
  rules:
    - host: {{ required "deployment.url is required for ngrok ingress" .Values.deployment.url | quote }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: openframe-gateway
                port:
                  number: 8100

{{- else if eq .Values.deployment.ingress "nat" }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: openframe-gateway
  annotations:
    cert-manager.io/cluster-issuer: "cluster-issuer"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - openframe-gateway.192.168.100.100.nip.io
    secretName: openframe-gateway-tls-secret
  rules:
    - host: openframe-gateway.192.168.100.100.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: openframe-gateway
                port:
                  name: http
{{- end }}

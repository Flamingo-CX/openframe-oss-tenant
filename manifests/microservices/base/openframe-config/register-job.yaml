apiVersion: batch/v1
kind: Job
metadata:
  name: openframe-config
  annotations:
    "argocd.argoproj.io/hook": PostSync
    "argocd.argoproj.io/hook-delete-policy": HookSucceeded
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: register
        image: curlimages/curl:8.5.0
        command:
        - /bin/sh
        - -c
        - |
          echo "Registering OpenFrame Config..."
          curl -X POST "http://openframe-management.microservices.svc.cluster.local:8095/v1/tools/openframe-config" \
            -H "Content-Type: application/json" \
            -d '{
              "tool": {
                "id": "openframe-config",
                "toolType": "OPENFRAME",
                "name": "OpenFrame Config",
                "description": "OpenFrame Configuration Service",
                "toolUrls": [
                  {
                    "url": "http://openframe-config.microservices.svc.cluster.local",
                    "port": "8090",
                    "type": "API"
                  }
                ],
                "category": "Configuration",
                "platformCategory": "OpenFrame Core",
                "enabled": true,
                "credentials": {},
                "layer": "Configuration",
                "layerOrder": 1,
                "layerColor": "#FFB74D",
                "metricsPath": "/metrics",
                "healthCheckEndpoint": "/health",
                "healthCheckInterval": 30,
                "connectionTimeout": 5000,
                "readTimeout": 5000,
                "allowedEndpoints": ["/api/v1/*", "/metrics"],
                "debeziumConnector": null
              }
            }' \
            --retry 5 \
            --retry-delay 2 \
            --retry-all-errors \
            --silent --show-error
          echo "OpenFrame Config Registration complete."

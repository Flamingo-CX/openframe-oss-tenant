{{- if .Values.registerJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: openframe-authorization-server
  annotations:
    "argocd.argoproj.io/hook": PostSync
    "argocd.argoproj.io/hook-delete-policy": HookSucceeded
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: Never
      {{- if ne .Values.registry.docker.password "" }}
      imagePullSecrets:
        - name: docker-pat-secret
      {{- end }}
      
      containers:
      - name: register
        image: curlimages/curl:8.5.0
        command:
          - /bin/sh
          - -c
          - |
            echo "Registering OpenFrame API..."
            echo "Waiting for OpenFrame Management API to become reachable..."
            until curl --head --fail --silent http://openframe-management.microservices.svc.cluster.local:8096/management/v1/health; do
              echo "Still waiting..."
              sleep 10
            done
            curl --verbose --show-error --fail \
              -X POST "http://openframe-management.microservices.svc.cluster.local:8095/v1/tools/openframe-authorization-server" \
              -H "Content-Type: application/json" \
              -d '{
                "tool": {
                  "id": "openframe-authorization-server",
                  "toolType": "OPENFRAME",
                  "name": "OpenFrame API",
                  "description": "OpenFrame API Gateway Service",
                  "toolUrls": [
                    {
                      "url": "http://openframe-authorization-server.microservices.svc.cluster.local",
                      "port": "9005",
                      "type": "API"
                    }
                  ],
                  "category": "API Gateway",
                  "platformCategory": "OpenFrame Core",
                  "enabled": true,
                  "credentials": {},
                  "layer": "Application",
                  "layerOrder": 2,
                  "layerColor": "#455A64",
                  "metricsPath": "/metrics",
                  "healthCheckEndpoint": "/health",
                  "healthCheckInterval": 30,
                  "connectionTimeout": 5000,
                  "readTimeout": 5000,
                  "allowedEndpoints": ["/api/v1/*", "/metrics"],
                  "debeziumConnector": null
                }
              }' \
              --retry 5 \
                          --retry-delay 2 \
              --retry-all-errors \
              --silent --show-error
            echo "OpenFrame API Registration complete."
{{- end }}

apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-ui
  annotations:
    "argocd.argoproj.io/hook": PostSync
    "argocd.argoproj.io/hook-delete-policy": HookSucceeded
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: register
        image: curlimages/curl:8.5.0
        command:
        - /bin/sh
        - -c
        - |
          echo "Registering Kafka UI..."
          curl -X POST "http://openframe-management.microservices.svc.cluster.local:8095/v1/tools/kafka-ui" \
            -H "Content-Type: application/json" \
            -d '{
              "tool": {
                "id": "kafka-ui",
                "toolType": "KAFKA_UI",
                "name": "Kafka UI",
                "description": "Kafka UI for Managing Kafka Clusters",
                "toolUrls": [
                  {
                    "url": "http://kafka-ui.client-tools.svc.cluster.local",
                    "port": "80",
                    "type": "DASHBOARD"
                  }
                ],
                "category": "Message Broker",
                "platformCategory": "OpenFrame Service",
                "enabled": true,
                "credentials": {},
                "layer": "Streaming",
                "layerOrder": 2,
                "layerColor": "#1976D2",
                "metricsPath": "/actuator/prometheus",
                "healthCheckEndpoint": "/actuator/health",
                "healthCheckInterval": 30,
                "connectionTimeout": 5000,
                "readTimeout": 5000,
                "allowedEndpoints": ["/actuator/health","/actuator/prometheus"],
                "debeziumConnector": null
              }
            }' \
            --retry 5 \
            --retry-delay 2 \
            --retry-all-errors \
            --silent --show-error
          echo "Kafka UI Registration complete."

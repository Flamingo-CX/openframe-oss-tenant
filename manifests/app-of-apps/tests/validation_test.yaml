suite: deployment validation tests
templates:
  - templates/argocd-apps.yaml
tests:
  # ========================================
  # VALID DEPLOYMENT SCENARIOS
  # ========================================
  
  - it: should validate self-hosted with localhost ingress
    set:
      deployment.selfHosted.enabled: true
      deployment.selfHosted.ingress.localhost.enabled: true
      deployment.selfHosted.ingress.ngrok.enabled: false
      deployment.saas.enabled: false
    asserts:
      - isKind:
          of: Application
      - equal:
          path: metadata.name
          value: argocd-apps

  - it: should validate self-hosted with ngrok ingress
    set:
      deployment.selfHosted.enabled: true
      deployment.selfHosted.ingress.localhost.enabled: false
      deployment.selfHosted.ingress.ngrok.enabled: true
      deployment.saas.enabled: false
    asserts:
      - isKind:
          of: Application
      - equal:
          path: metadata.name
          value: argocd-apps

  - it: should validate SaaS deployment
    set:
      deployment.selfHosted.enabled: false
      deployment.saas.enabled: true
      deployment.saas.ingress.localhost.enabled: true
    asserts:
      - isKind:
          of: Application
      - equal:
          path: metadata.name
          value: argocd-apps

  # ========================================
  # DEPLOYMENT TYPE VALIDATION ERRORS
  # ========================================

  - it: should fail when both deployment types enabled
    set:
      deployment.selfHosted.enabled: true
      deployment.saas.enabled: true
    asserts:
      - failedTemplate:
          errorMessage: "ERROR: Exactly one deployment type must be enabled. Currently selfHosted=true, saas=true"

  - it: should fail when no deployment types enabled
    set:
      deployment.selfHosted.enabled: false
      deployment.saas.enabled: false
    asserts:
      - failedTemplate:
          errorMessage: "ERROR: Exactly one deployment type must be enabled. Currently selfHosted=false, saas=false"

  # ========================================
  # SELF-HOSTED INGRESS VALIDATION ERRORS
  # ========================================

  - it: should fail when self-hosted has both ingresses
    set:
      deployment.selfHosted.enabled: true
      deployment.selfHosted.ingress.localhost.enabled: true
      deployment.selfHosted.ingress.ngrok.enabled: true
      deployment.saas.enabled: false
    asserts:
      - failedTemplate:
          errorMessage: "ERROR: Exactly one ingress must be enabled for selfHosted deployment. Currently localhost=true, ngrok=true"

  - it: should fail when self-hosted has no ingresses
    set:
      deployment.selfHosted.enabled: true
      deployment.selfHosted.ingress.localhost.enabled: false
      deployment.selfHosted.ingress.ngrok.enabled: false
      deployment.saas.enabled: false
    asserts:
      - failedTemplate:
          errorMessage: "ERROR: Exactly one ingress must be enabled for selfHosted deployment. Currently localhost=false, ngrok=false"

  # ========================================
  # SAAS INGRESS VALIDATION ERRORS
  # ========================================

  - it: should fail when SaaS localhost ingress disabled
    set:
      deployment.selfHosted.enabled: false
      deployment.saas.enabled: true
      deployment.saas.ingress.localhost.enabled: false
    asserts:
      - failedTemplate:
          errorMessage: "ERROR: localhost ingress must be enabled for SaaS deployment"